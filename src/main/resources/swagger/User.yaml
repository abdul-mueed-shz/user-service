openapi: "3.0.3"
info:
  version: v1
  title: User Controller Service
  description: This is an open API specification document for smart-contract-service related operations.
  contact:
    name: Abdul Mueed Shahbaz
    email: abdulmueedshahbaz@gmail.com
  license:
    name: OrderLab
    url: https://example.com
servers:
  - url: 'http://localhost:8040'
    description: Development and Testing Server
  - url: 'http://localhost:8081'
    description: Test automation server
  - url: 'http://localhost:8090'
    description: Acceptance server

tags:
  - name: User Controller
    description: User Controller

paths:
  /api/v1/oauth2/{client}/login:
    post:
      tags:
        - User
      summary: Oauth2 login (X formerly twitter, Google, Linkedin, Github)
      operationId: oauth2Login
      parameters:
        - in: path
          name: client
          schema:
            type: string
          required: true
          description: client name to login for.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Oauth2LoginRequest'
      responses:
        '200':
          description: Response indicates successful login of the user.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Oauth2LoginResponse'
  /api/v1/users/register:
    post:
      tags:
        - User
      summary: Register User
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
      responses:
        '200':
          description: Response indicates successful creation of the record.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/MessageInfo'
  /api/v1/users:
    get:
      tags:
        - User
      summary: Get users
      operationId: getUsers
      responses:
        '200':
          description: Response contains the registered users list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'

components:
  parameters:
    PageOffset:
      name: pageOffset
      in: query
      schema:
        $ref: "#/components/schemas/PageOffset"

    PageNumber:
      name: pageNumber
      in: query
      schema:
        $ref: "#/components/schemas/PageNumber"

    PageSize:
      name: pageSize
      in: query
      schema:
        $ref: "#/components/schemas/PageSize"

    SortDirection:
      name: sortDirection
      required: false
      in: query
      schema:
        $ref: "#/components/schemas/SortDirection"

    SortBy:
      name: sortBy
      required: false
      in: query
      schema:
        $ref: "#/components/schemas/SortBy"

    SortByUpdatedOn:
      name: sortBy
      required: false
      in: query
      schema:
        $ref: "#/components/schemas/SortByUpdatedOn"

  schemas:
    MessageInfo:
      type: object
      properties:
        messageCode:
          type: string
        messageDescription:
          type: string
        displayableName:
          type: string
        id:
          type: integer
          format: int64
        displayableId:
          type: string

    PageOffset:
      type: integer
      minimum: 0
      default: 0
      example: 0

    PageNumber:
      type: integer
      minimum: 0
      default: 0
      example: 0

    PageSize:
      type: integer
      minimum: 0
      default: 10
      example: 0

    SortDirection:
      type: string
      default: ASC
      enum:
        - ASC
        - DESC

    SortBy:
      type: string
      default: createdOn
      enum:
        - createdOn

    SortByUpdatedOn:
      type: string
      default: updatedOn
      enum:
        - updatedOn

    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the user
        firstName:
          type: string
          description: First name of the user
          minLength: 10
        lastName:
          type: string
          description: Last name of the user
          minLength: 10
        emailVerified:
          type: boolean
          description: Email verification info
        username:
          type: string
          description: Username of the user
        email:
          type: string
          description: Email address of the user
        googleUser:
          $ref: "#/components/schemas/GoogleUserInfo"
        linkedinUser:
          $ref: "#/components/schemas/LinkedinUserInfo"
        twitterUser:
          $ref: "#/components/schemas/TwitterUserInfo"
        githubUser:
          $ref: "#/components/schemas/GithubUserInfo"
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleInfo'
          description: Set of roles assigned to the user
        createdAt:
          type: string
          format: date-time
          description: The date and time the user was created
        updatedAt:
          type: string
          format: date-time
          description: The date and time the user was last updated
        isActive:
          type: boolean
          description: Indicates whether the user is active
        isSystemLock:
          type: boolean
          description: Indicates whether the user's system lock is enabled
        areCredentialsValid:
          type: boolean
          description: Indicates whether the user's credentials are valid

    RoleInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the role
        name:
          type: string
          description: Name of the role
        permissions:
          type: object
          items:
            $ref: "#/components/schemas/PermissionInfo"

    RegisterUserRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        emailVerified:
          type: boolean
          default: false
        firstName:
          type: string
          description: First name of the user
          minLength: 10
        lastName:
          type: string
          description: Last name of the user
          minLength: 10
        username:
          type: string
          description: Username of the user
          minLength: 10
        email:
          type: string
          format: email
          description: Email address of the user
          minLength: 10
        password:
          type: string
          format: password
          description: Password of the user
          minLength: 10
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleRequest'
          description: Set of roles assigned to the user

    RoleRequest:
      type: object
      required:
        - id
        - name
        - permissions
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the role
        name:
          type: string
          description: Name of the role
        permissions:
          type: object
          items:
            $ref: "#/components/schemas/PermissionInfo"

    PermissionInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    GoogleUserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        authUserId:
          type: string
        googleId:
          type: string
        picture:
          type: string
        createdAt:
          type: string
          format: datetime
        updatedAt:
          type: string
          format: datetime

    LinkedinUserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        picture:
          type: string
        createdAt:
          type: string
          format: datetime
        updatedAt:
          type: string
          format: datetime

    TwitterUserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        picture:
          type: string
        createdAt:
          type: string
          format: datetime
        updatedAt:
          type: string
          format: datetime

    GithubUserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        avatarUrl:
          type: string
        htmlUrl:
          type: string
        blog:
          type: string
        company:
          type: string
        bio:
          type: string
        hireable:
          type: boolean
        createdAt:
          type: string
          format: datetime
        updatedAt:
          type: string
          format: datetime

    Oauth2LoginRequest:
      type: object
      required:
        - searchTerm
      properties:
        searchTerm:
          type: string

    Oauth2LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
